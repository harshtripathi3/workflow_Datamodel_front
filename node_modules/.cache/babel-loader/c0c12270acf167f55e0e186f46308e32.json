{"ast":null,"code":"var _jsxFileName = \"/home/drigger/Documents/Subjects/DM/UpdatedDMFrontEnd-master/src/services/TaskIns.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskIns() {\n  _s();\n  let navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [taskins, setTaskIns] = useState([]);\n  const refreshPage = () => {\n    navigate(0);\n  };\n  useEffect(() => {\n    loadUser();\n  }, []);\n  const loadUser = async () => {\n    const result = await axios.get(`http://localhost:9191/taskInstance/taskInstances/${id}`);\n    setTaskIns(result.data);\n    console.log();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3 border rounded p-4 mt-2 shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          htmlFor: \"Name\",\n          className: \"form-label\",\n          children: \"Task Instance:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Task Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: taskins.map((flows, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: index + 1\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: flows.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: flows.task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Made with \\u2764\\uFE0F and \\uD83E\\uDDD1\\u200D\\uD83D\\uDCBB by \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"Workflow data model team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskIns, \"7+QfZMH9jXNDjndWnVYhVQ/MmRo=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = TaskIns;\nvar _c;\n$RefreshReg$(_c, \"TaskIns\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useParams","axios","Table","useCallback","TaskIns","navigate","id","taskins","setTaskIns","refreshPage","loadUser","result","get","data","console","log","map","flows","index","status","task","description"],"sources":["/home/drigger/Documents/Subjects/DM/UpdatedDMFrontEnd-master/src/services/TaskIns.js"],"sourcesContent":["import React, { useState,useEffect } from 'react'\nimport { Link, useNavigate,useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport { useCallback } from \"react\";\n\nexport default function TaskIns() {\n\n    let navigate = useNavigate()\n\n    const {id}=useParams();\n    const [taskins,setTaskIns] = useState([])\n    \n\n    const refreshPage = () => {\n        navigate(0);\n      }\n      \n    useEffect(()=>{\n        loadUser();\n    },[]);\n\n    const loadUser=async()=>{\n        const result=await axios.get(`http://localhost:9191/taskInstance/taskInstances/${id}`)\n        setTaskIns(result.data)\n        console.log()\n\n    }\n\n\n    return (\n        <div className='container'>\n            <div className='row'>\n                <div className='col-md-6 offset-md-3 border rounded p-4 mt-2 shadow'>\n                    <br></br><h3 htmlFor='Name' className='form-label'>\n                                Task Instance:\n                            </h3>\n                    <Table striped bordered hover >\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Status</th>\n                            <th scope=\"col\">Task Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            taskins.map((flows, index) => (\n                                <tr>\n                                    <th scope=\"row\" key={index}>{index + 1}</th>\n                                    {/* <td>{flows.description}</td> */}\n                                    <td>{flows.status}</td>\n                                    <td>{flows.task.description}</td>\n                                </tr>\n                            )\n                            )\n                        }\n                    </tbody>\n                </Table>\n\n                </div>\n            </div>\n            <div className=\"footer\">\n                <p>Made with ‚ù§Ô∏è and üßë‚Äçüíª by <i>Workflow data model team</i></p>\n            </div>\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,SAASC,IAAI,EAAEC,WAAW,EAACC,SAAS,QAAQ,kBAAkB;AAC9D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,uBAAuB;AACzC,SAASC,WAAW,QAAQ,OAAO;AAAC;AAEpC,eAAe,SAASC,OAAO,GAAG;EAAA;EAE9B,IAAIC,QAAQ,GAAGN,WAAW,EAAE;EAE5B,MAAM;IAACO;EAAE,CAAC,GAACN,SAAS,EAAE;EACtB,MAAM,CAACO,OAAO,EAACC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAGzC,MAAMa,WAAW,GAAG,MAAM;IACtBJ,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EAEHR,SAAS,CAAC,MAAI;IACVa,QAAQ,EAAE;EACd,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMA,QAAQ,GAAC,YAAS;IACpB,MAAMC,MAAM,GAAC,MAAMV,KAAK,CAACW,GAAG,CAAE,oDAAmDN,EAAG,EAAC,CAAC;IACtFE,UAAU,CAACG,MAAM,CAACE,IAAI,CAAC;IACvBC,OAAO,CAACC,GAAG,EAAE;EAEjB,CAAC;EAGD,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAK,SAAS,EAAC,KAAK;MAAA,uBAChB;QAAK,SAAS,EAAC,qDAAqD;QAAA,wBAChE;UAAA;UAAA;UAAA;QAAA,QAAS;UAAI,OAAO,EAAC,MAAM;UAAC,SAAS,EAAC,YAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAErC,eACb,QAAC,KAAK;UAAC,OAAO;UAAC,QAAQ;UAAC,KAAK;UAAA,wBAC7B;YAAA,uBACI;cAAA,wBACI;gBAAI,KAAK,EAAC,KAAK;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAO,eACtB;gBAAI,KAAK,EAAC,KAAK;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAY,eAC3B;gBAAI,KAAK,EAAC,KAAK;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAe;YAAA;cAAA;cAAA;cAAA;YAAA;UAC7B;YAAA;YAAA;YAAA;UAAA,QACD,eACR;YAAA,UAEQR,OAAO,CAACS,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrB;cAAA,wBACI;gBAAI,KAAK,EAAC,KAAK;gBAAA,UAAcA,KAAK,GAAG;cAAC,GAAjBA,KAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAkB,eAE5C;gBAAA,UAAKD,KAAK,CAACE;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eACvB;gBAAA,UAAKF,KAAK,CAACG,IAAI,CAACC;cAAW;gBAAA;gBAAA;gBAAA;cAAA,QAAM;YAAA;cAAA;cAAA;cAAA;YAAA,QAExC;UACA;YAAA;YAAA;YAAA;UAAA,QAED;QAAA;UAAA;UAAA;UAAA;QAAA,QACJ;MAAA;QAAA;QAAA;QAAA;MAAA;IAEF;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAK,SAAS,EAAC,QAAQ;MAAA,uBACnB;QAAA,yFAA6B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA+B;MAAA;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QAC9D;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GA7DuBjB,OAAO;EAAA,QAEZL,WAAW,EAEfC,SAAS;AAAA;AAAA,KAJAI,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}