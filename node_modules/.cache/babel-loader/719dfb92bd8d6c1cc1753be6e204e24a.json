{"ast":null,"code":"var _jsxFileName = \"/home/drigger/Documents/Project/DataModel/front/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport loginService from './services/login';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\nimport Notification from './components/Notification';\nimport LoginForm from './components/LoginForm';\nimport NavBar from './components/NavBar';\nimport Home from './services/Home';\nimport Adminupd from './services/Adminupd';\nimport AddTask from './services/AddTask';\nimport Adminmain from './services/AdminMain';\nimport Admincr from './services/Admincreate';\nimport Tasks from './services/Tasks';\nimport AddAction from './services/AddAction';\nimport UserMain from './services/UserMain';\nimport UsertaskIns from './services/UsertaskIns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  let navigate = useNavigate();\n  // user state will store the logged in user object, if no login has been done yet then it will be null\n  const [user, setUser] = useState(null);\n\n  // Will store the bills of the logged in user\n  const [bills, setBills] = useState([]);\n\n  // These states are used to control the notifications that show up at the top of the screen for events like \n  // login, signup, watchlist creation, etc.\n  const [notification, setNotification] = useState(null);\n  const [notificationType, setNotificationType] = useState(null);\n\n  // Create a notification at the top of the screen with given message for 10 seconds \n  // Notifications are of two types, \"error\" and \"success\"\n  // The appearance of these two notifications can be adjusted via the index.css file\n  const notificationHandler = (message, type) => {\n    setNotification(message);\n    setNotificationType(type);\n    setTimeout(() => {\n      setNotificationType(null);\n      setNotification(null);\n    }, 3000);\n  };\n\n  // Function that handles login of users\n  const handleLogin = async credentials => {\n    try {\n      const userObject = await loginService.login(credentials);\n      setUser(userObject);\n      window.localStorage.setItem('loggedInUser', JSON.stringify(userObject));\n      notificationHandler(`Logged in successfully as ${userObject.name}`, 'success');\n      setBills([]);\n    } catch (exception) {\n      notificationHandler(`Log in failed, check username and password entered`, 'error');\n    }\n  };\n\n  // Effect Hook that parses the local storage for 'loggedInUser' and sets the \"user\" state if a valid match is found\n  // This enables user to login automatically without having to type in the credentials. Caching the login if you will.\n  useEffect(() => {\n    const loggedInUser = window.localStorage.getItem('loggedInUser');\n    if (loggedInUser) setUser(JSON.parse(loggedInUser));\n  }, []);\n  if (user && user.role == 'Admin') {\n    navigate(\"/adminmain\");\n  } else {\n    navigate(\"/usermain\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      notification: notification,\n      type: notificationType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /* Show Login form when no login has happened */\n    user === null && /*#__PURE__*/_jsxDEV(LoginForm, {\n      startLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /* Show NavBar when login has happened */\n    user !== null && /*#__PURE__*/_jsxDEV(NavBar, {\n      user: user,\n      setUser: setUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), user !== null && /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/{ state: { id: 7, color: 'green' } }\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 78\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/adminupd\",\n          element: /*#__PURE__*/_jsxDEV(Adminupd, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/addtask/:id\",\n          element: /*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/adminmain\",\n          element: /*#__PURE__*/_jsxDEV(Adminmain, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/admincr\",\n          element: /*#__PURE__*/_jsxDEV(Admincr, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/viewtask/:id\",\n          element: /*#__PURE__*/_jsxDEV(Tasks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/addaction/:wid/:tid\",\n          element: /*#__PURE__*/_jsxDEV(AddAction, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/usermain\",\n          element: /*#__PURE__*/_jsxDEV(UserMain, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/userins\",\n          element: /*#__PURE__*/_jsxDEV(UsertaskIns, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3AeG7XSvchGf21OJw0HNbHBonS4=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","loginService","BrowserRouter","Router","Routes","Route","useNavigate","Notification","LoginForm","NavBar","Home","Adminupd","AddTask","Adminmain","Admincr","Tasks","AddAction","UserMain","UsertaskIns","App","navigate","user","setUser","bills","setBills","notification","setNotification","notificationType","setNotificationType","notificationHandler","message","type","setTimeout","handleLogin","credentials","userObject","login","window","localStorage","setItem","JSON","stringify","name","exception","loggedInUser","getItem","parse","role"],"sources":["/home/drigger/Documents/Project/DataModel/front/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport loginService from './services/login'\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport NavBar from './components/NavBar'\nimport Home from './services/Home'\nimport Adminupd from './services/Adminupd';\nimport AddTask from './services/AddTask';\nimport Adminmain from './services/AdminMain';\nimport Admincr from './services/Admincreate';\nimport Tasks from './services/Tasks';\nimport AddAction from './services/AddAction';\nimport UserMain from './services/UserMain';\nimport UsertaskIns from './services/UsertaskIns';\n\nconst App = () => {\n  let navigate=useNavigate();\n  // user state will store the logged in user object, if no login has been done yet then it will be null\n  const [ user, setUser ] = useState(null)\n\n  // Will store the bills of the logged in user\n  const [ bills, setBills ] = useState([])\n\n  // These states are used to control the notifications that show up at the top of the screen for events like \n  // login, signup, watchlist creation, etc.\n  const [ notification, setNotification ] = useState(null)\n  const [ notificationType, setNotificationType ] = useState(null)\n\n  // Create a notification at the top of the screen with given message for 10 seconds \n  // Notifications are of two types, \"error\" and \"success\"\n  // The appearance of these two notifications can be adjusted via the index.css file\n  const notificationHandler = (message, type) => {\n    setNotification(message)\n    setNotificationType(type)\n\n    setTimeout(() => {\n      setNotificationType(null)\n      setNotification(null)\n    }, 3000)\n  }\n\n  // Function that handles login of users\n  const handleLogin = async (credentials) => {\n    try {\n      const userObject = await loginService.login(credentials)\n      setUser(userObject)\n      window.localStorage.setItem('loggedInUser', JSON.stringify(userObject))\n      notificationHandler(`Logged in successfully as ${userObject.name}`, 'success')    \n      setBills([])\n      \n    }\n    catch (exception) {\n      notificationHandler(`Log in failed, check username and password entered`, 'error')\n    }\n  }\n  \n\n\n  // Effect Hook that parses the local storage for 'loggedInUser' and sets the \"user\" state if a valid match is found\n  // This enables user to login automatically without having to type in the credentials. Caching the login if you will.\n  useEffect(() => {\n    const loggedInUser = window.localStorage.getItem('loggedInUser')\n    if (loggedInUser)\n      setUser(JSON.parse(loggedInUser))\n  }, [])\n\n  if(user && user.role=='Admin'){\n    navigate(\"/adminmain\");\n  }\n  else{\n    navigate(\"/usermain\");\n  }\n\n  return (\n    <div>\n      {/* Header of the page */}\n      {/* <div className='text-left page-header p-2 regular-shadow '>\n          <div className='font-weight-bold'>\n            <h2>IIIT Bengluru Academic Portal </h2>\n          </div>\n      </div> */}\n      \n      {/* Notification component that will render only when the notification state is not null */}\n      <Notification notification={notification} type={notificationType} />\n\n      {\n        /* Show Login form when no login has happened */\n        user === null && \n        <LoginForm startLogin={handleLogin}/>\n      }\n\n      {\n        /* Show NavBar when login has happened */\n        user !== null && \n        <NavBar user={user} setUser={setUser}/>\n      } \n      \n    {\n      user!==null && \n        <Router>\n          <Routes>\n          <Route exact path=\"/{ state: { id: 7, color: 'green' } }\" element={<Home/>} /> \n          <Route exact path=\"/adminupd\" element={<Adminupd/>} /> \n          <Route exact path=\"/addtask/:id\" element={<AddTask />} />\n          <Route exact path=\"/adminmain\" element={<Adminmain />} />\n          <Route exact path=\"/admincr\" element={<Admincr />} />\n          <Route exact path=\"/viewtask/:id\" element={<Tasks />} />\n          <Route exact path=\"/addaction/:wid/:tid\" element={<AddAction />} />\n          <Route exact path=\"/usermain\" element={<UserMain />} /> \n          <Route exact path=\"/userins\" element={<UsertaskIns />} />\n          </Routes>\n        </Router>\n      }\n\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}